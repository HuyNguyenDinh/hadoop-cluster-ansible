# tasks/yarn_setup.yml
# 4. Generate SSH keys and distribute for yarn user
- name: Generate SSH key for yarn user on master node
  ansible.builtin.user:
    name: "{{ yarn_user }}"
    generate_ssh_key: yes
    ssh_key_bits: 4096
    ssh_key_type: rsa
  when: inventory_hostname == groups['master'][0]

- name: Fetch yarn user's public key from master node
  ansible.builtin.fetch:
    src: "/home/{{ yarn_user }}/.ssh/id_rsa.pub"
    dest: "yarn_id_rsa.pub"
    flat: yes
  when: inventory_hostname == groups['master'][0]

- name: Create .ssh directory for yarn user
  ansible.builtin.file:
    path: "/home/{{ yarn_user }}/.ssh"
    state: directory
    owner: "{{ yarn_user }}"
    group: "{{ hadoop_group }}"
    mode: '0700'

- name: Distribute yarn public key to authorized_keys
  ansible.builtin.copy:
    src: "yarn_id_rsa.pub"
    dest: "/home/{{ yarn_user }}/.ssh/authorized_keys"
    owner: "{{ yarn_user }}"
    group: "{{ hadoop_group }}"
    mode: '0600'

- name: Add all hosts to yarn user's known_hosts
  ansible.builtin.known_hosts:
    path: "/home/{{ yarn_user }}/.ssh/known_hosts"
    name: "{{ hostvars[item]['ansible_host'] }}"
    key: "{{ lookup('pipe', 'ssh-keyscan -H -T 5 ' + hostvars[item]['ansible_host']) }}"
  with_items: "{{ groups['all'] }}"
  become: yes

- name: Ensure .ssh directory exists for yarn user
  ansible.builtin.file:
    path: "/home/{{ yarn_user }}/.ssh"
    state: directory
    owner: "{{ yarn_user }}"
    group: "{{ hadoop_group }}"
    mode: '0700'

- name: Set ownership for Yarn directories
  ansible.builtin.file:
    path: "{{ item }}"
    owner: "{{ yarn_user }}"
    group: "{{ hadoop_group }}"
    mode: "0755"
    state: directory
    recurse: yes
  loop:
    - "/var/hadoop/yarn"
    - "/var/hadoop/yarn/local"
    - "/var/hadoop/yarn/logs"
